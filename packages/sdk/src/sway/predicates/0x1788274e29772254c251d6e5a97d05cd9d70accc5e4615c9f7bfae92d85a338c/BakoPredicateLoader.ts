/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.65.2
  Fuel-Core version: 0.38.0
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type BakoPredicateLoaderConfigurables = Partial<{
    SIGNERS: [string, string, string, string, string, string, string, string, string, string];
    SIGNATURES_COUNT: BigNumberish;
    HASH_PREDICATE: string;
}>;

export type BakoPredicateLoaderInputs = [];

export type BakoPredicateLoaderParameters = Omit<
  PredicateParams<BakoPredicateLoaderInputs, BakoPredicateLoaderConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "[b256; 10]",
      "concreteTypeId": "048b86a7fa6d593a3b17384eeb42370b18126ce11ea29e4d60f7a6c2a507b88d",
      "metadataTypeId": 0
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 10]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "SIGNERS",
      "concreteTypeId": "048b86a7fa6d593a3b17384eeb42370b18126ce11ea29e4d60f7a6c2a507b88d",
      "offset": 128
    },
    {
      "name": "SIGNATURES_COUNT",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 120
    },
    {
      "name": "HASH_PREDICATE",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "offset": 88
    }
  ]
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA5NyMGAIcGQwkHIJYNjlycBg5MDSCOQrxALZQJoDyG9ScBVmCHIVYPFyYWAQPrbltqEVk1yj34Zlzlzb3+989vnaDrsffLd4GiWO/IwrZQADJgMIPQpoDZwcvf1BtIGhkbGJqZm5hWViUnJKahoBbYyEzD0DBgxMEJ60CISWfAKl70BoMRYILboGQgvWQGiBP1A6A0o7QGj+JRCaRwFCc/JAaA4bALEeImCIAgAA');

export class BakoPredicateLoader extends Predicate<
  BakoPredicateLoaderInputs,
  BakoPredicateLoaderConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: BakoPredicateLoaderParameters) {
    super({ abi, bytecode, ...params });
  }
}
